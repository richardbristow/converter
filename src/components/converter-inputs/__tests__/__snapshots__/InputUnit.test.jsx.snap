// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InputUnit should render an input element, with the correct props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <InputUnit
    conversionType="type1"
    disableInputs={false}
    dropdownValue="mathName2"
    handleChange={[MockFunction]}
    name="name"
    options={
      Array [
        Object {
          "displayName": "display1",
          "mathName": "mathName1",
        },
        Object {
          "displayName": "display2",
          "mathName": "mathName2",
        },
        Object {
          "displayName": "display3",
          "mathName": "mathName3",
        },
      ]
    }
    textValue="InputValue"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef
          disabled={false}
          name="nameInput"
          onChange={[Function]}
          type="text"
          value="InputValue"
        />,
        <FilterDropdown
          conversionType="type1"
          disableInputs={false}
          dropdownValue="mathName2"
          handleChange={[MockFunction]}
          name="name"
          options={
            Array [
              Object {
                "displayName": "display1",
                "mathName": "mathName1",
              },
              Object {
                "displayName": "display2",
                "mathName": "mathName2",
              },
              Object {
                "displayName": "display3",
                "mathName": "mathName3",
              },
            ]
          }
        />,
      ],
      "name": "name",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "disabled": false,
          "name": "nameInput",
          "onChange": [Function],
          "type": "text",
          "value": "InputValue",
        },
        "ref": null,
        "rendered": null,
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "InputUnit__StyledNumberInput-sc-7nhp5f-1",
            "isStatic": true,
            "rules": Array [
              "padding:0px 15px;border-top:1px solid black;border-left:1px solid black;border-right:1px solid black;border-bottom:0px;border-radius:4px 4px 0px 0px;font-size:2em;min-width:0;&:disabled{cursor:not-allowed;}",
            ],
          },
          "displayName": "InputUnit__StyledNumberInput",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "InputUnit__StyledNumberInput-sc-7nhp5f-1",
          "target": "input",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "conversionType": "type1",
          "disableInputs": false,
          "dropdownValue": "mathName2",
          "handleChange": [MockFunction],
          "name": "name",
          "options": Array [
            Object {
              "displayName": "display1",
              "mathName": "mathName1",
            },
            Object {
              "displayName": "display2",
              "mathName": "mathName2",
            },
            Object {
              "displayName": "display3",
              "mathName": "mathName3",
            },
          ],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "InputUnit__StyledInputUnit-sc-7nhp5f-0",
        "isStatic": false,
        "rules": Array [
          "grid-area:",
          [Function],
          ";display:grid;grid-template-columns:1fr;grid-template-rows:70px auto;",
        ],
      },
      "displayName": "InputUnit__StyledInputUnit",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "InputUnit__StyledInputUnit-sc-7nhp5f-0",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef
            disabled={false}
            name="nameInput"
            onChange={[Function]}
            type="text"
            value="InputValue"
          />,
          <FilterDropdown
            conversionType="type1"
            disableInputs={false}
            dropdownValue="mathName2"
            handleChange={[MockFunction]}
            name="name"
            options={
              Array [
                Object {
                  "displayName": "display1",
                  "mathName": "mathName1",
                },
                Object {
                  "displayName": "display2",
                  "mathName": "mathName2",
                },
                Object {
                  "displayName": "display3",
                  "mathName": "mathName3",
                },
              ]
            }
          />,
        ],
        "name": "name",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "disabled": false,
            "name": "nameInput",
            "onChange": [Function],
            "type": "text",
            "value": "InputValue",
          },
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "InputUnit__StyledNumberInput-sc-7nhp5f-1",
              "isStatic": true,
              "rules": Array [
                "padding:0px 15px;border-top:1px solid black;border-left:1px solid black;border-right:1px solid black;border-bottom:0px;border-radius:4px 4px 0px 0px;font-size:2em;min-width:0;&:disabled{cursor:not-allowed;}",
              ],
            },
            "displayName": "InputUnit__StyledNumberInput",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "InputUnit__StyledNumberInput-sc-7nhp5f-1",
            "target": "input",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "conversionType": "type1",
            "disableInputs": false,
            "dropdownValue": "mathName2",
            "handleChange": [MockFunction],
            "name": "name",
            "options": Array [
              Object {
                "displayName": "display1",
                "mathName": "mathName1",
              },
              Object {
                "displayName": "display2",
                "mathName": "mathName2",
              },
              Object {
                "displayName": "display3",
                "mathName": "mathName3",
              },
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "InputUnit__StyledInputUnit-sc-7nhp5f-0",
          "isStatic": false,
          "rules": Array [
            "grid-area:",
            [Function],
            ";display:grid;grid-template-columns:1fr;grid-template-rows:70px auto;",
          ],
        },
        "displayName": "InputUnit__StyledInputUnit",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "InputUnit__StyledInputUnit-sc-7nhp5f-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
