name: CI workflow

on: [push, pull_request]

jobs:
  test:
    name: Node ${{ matrix.node-version }} - lint, test, build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14, 16]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3.2.0
        with:
          node-version: ${{ matrix.node-version }}
      - run: node --version
      - run: yarn --version
      - run: yarn install
      - run: yarn lint
      - name: yarn test
        env:
          CI: true
        run: yarn test --coverage
      - run: yarn build

  deploy_netlify:
    name: deploy to netlify
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name != 'pull_request'

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 14.x
        uses: actions/setup-node@v3.2.0
        with:
          node-version: 14.x
      - run: node --version
      - run: yarn --version
      - run: netlify --version
      - run: yarn install
      - name: 'PROD: yarn build:prod'
        if: github.ref == 'refs/heads/main'
        env:
          REACT_APP_CACHED_EXCHANGE_RATES_URL: ${{ secrets.REACT_APP_CACHED_EXCHANGE_RATES_URL }}
          REACT_APP_CACHED_EXCHANGE_RATES_APIKEY: ${{ secrets. REACT_APP_CACHED_EXCHANGE_RATES_APIKEY }}
        run: yarn build:prod
      - name: 'DEV: yarn build'
        if: github.ref == 'refs/heads/develop'
        env:
          REACT_APP_CACHED_EXCHANGE_RATES_URL_DEV: ${{ secrets.REACT_APP_CACHED_EXCHANGE_RATES_URL_DEV }}
          REACT_APP_CACHED_EXCHANGE_RATES_APIKEY_DEV: ${{ secrets.REACT_APP_CACHED_EXCHANGE_RATES_APIKEY_DEV }}
        run: yarn build
      - name: 'PROD: deploy to netlify'
        if: github.ref == 'refs/heads/main'
        run: netlify deploy --dir=build --prod
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      - name: 'DEV: deploy to netlify'
        if: github.ref == 'refs/heads/develop'
        run: netlify deploy --dir=build
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  serverless_deploy_aws:
    name: serverless deploy to AWS
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name != 'pull_request'

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 14.x
        uses: actions/setup-node@v3.2.0
        with:
          node-version: 14.x
      - run: npm install serverless -g
      - run: node --version
      - run: yarn --version
      - run: serverless --version
      - run: yarn install
      - name: 'PROD: serverless deploy to AWS'
        if: github.ref == 'refs/heads/main'
        run: |
          cd backend
          serverless deploy --stage prod -v --conceal
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          FIXER_API_KEY: ${{ secrets.FIXER_API_KEY }}
      - name: 'DEV: serverless deploy to AWS'
        if: github.ref == 'refs/heads/develop'
        run: |
          cd backend
          serverless deploy -v --conceal
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          FIXER_API_KEY: ${{ secrets.FIXER_API_KEY }}
