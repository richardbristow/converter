name: CI workflow

on: [push, pull_request]

jobs:
  test:
    name: Node ${{ matrix.node }} - lint, test, build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 13.x]

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: yarn install, lint, test, build
        run: |
          node --version
          yarn --version
          yarn install
          yarn lint
          yarn test --coverage
          yarn build
        env:
          CI: true

  deploy_netlify:
    name: deploy to netlify
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js 13
        uses: actions/setup-node@v1
        with:
          node-version: 13.x
      - name: install netlify-cli
        run: npm install netlify-cli -g
      - run: |
          node --version
          yarn --version
          netlify --version
          yarn install
          yarn build
      - name: 'PROD: deploy to netlify'
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: netlify deploy --prod
        env:
          REACT_APP_CACHED_EXCHANGE_RATES_URL: ${{ secrets.REACT_APP_CACHED_EXCHANGE_RATES_URL }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      - name: 'DEV: deploy to netlify'
        if: github.event_name == 'push' && github.ref != 'refs/heads/master'
        run: netlify deploy
        env:
          REACT_APP_CACHED_EXCHANGE_RATES_URL: ${{ secrets.REACT_APP_DEV_CACHED_EXCHANGE_RATES_URL }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  serverless_deploy_aws:
    name: serverless deploy to AWS
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js 13
        uses: actions/setup-node@v1
        with:
          node-version: 13.x
      - run: |
          npm install serverless -g
          node --version
          yarn --version
          serverless --version
          yarn install
      - name: 'PROD: serverless deploy to AWS'
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          cd backend
          serverless deploy --stage prod -v --conceal
      - name: 'DEV: serverless deploy to AWS'
        if: github.event_name == 'push' && github.ref != 'refs/heads/master'
        run: |
          cd backend
          serverless deploy -v --conceal

        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          FIXER_API_KEY: ${{ secrets.FIXER_API_KEY }}
